#!/usr/bin/env python3
# Copyright 2014 Dietrich Epp.
# This file is part of Oubliette.  Oubliette is licensed under the terms
# of the 2-clause BSD license.  For more information, see LICENSE.txt.
import os
import subprocess
import collections
os.chdir(os.path.dirname(os.path.realpath(__file__)))
Image = collections.namedtuple('Image', 'name width height')
AUTOGEN = '// This file is automatically generated.'

def scan(root):
    dirpath = os.path.join('../../data', root)
    images = []
    for fname in os.listdir(dirpath):
        if fname.startswith('.') or not fname.endswith('.png'):
            continue
        path = os.path.join(dirpath, fname)
        info = subprocess.check_output(
            ['gm', 'identify', '-format', '%w %h', path])
        width, height = [int(x) for x in info.split()]
        images.append(Image(os.path.splitext(fname)[0], width, height))
    images.sort(key=lambda x: x.name)
    return images

def run():
    categories = ['sprite', 'ui']
    allimages = [scan(c) for c in categories]
    with open('sprite_enum.hpp', 'w') as fp:
        print(AUTOGEN, file=fp)
        for category, images in zip(categories, allimages):
            print('static const int {}_COUNT = {};'
                  .format(category.upper(), len(images)), file=fp)
            print('enum class {} {{'.format(category), file=fp)
            for image in images[:-1]:
                print('    {},'.format(image.name.upper()), file=fp)
            print('    {}'.format(images[-1].name.upper()), file=fp)
            print('};', file=fp)
    with open('sprite_array.hpp', 'w') as fp:
        print(AUTOGEN, file=fp)
        for category, images in zip(categories, allimages):
            for image in images:
                print('{{ "{}/{}", 0, 0, {}, {} }},'
                      .format(category, image.name,
                              image.width, image.height), file=fp)

run()
